# If not running interactively, don't do anything
[ -z "$PS1" ] && return

export EDITOR=vim

if [ -f "/usr/local/bin/activate.sh" ] ; then
    source /usr/local/bin/activate.sh
fi

MATTS_DEFAULT_COLOR="[00m"
MATTS_GRAY_COLOR="[37m"
MATTS_PINK_COLOR="[35m"
MATTS_GREEN_COLOR="[32m"
MATTS_ORANGE_COLOR="[33m"
MATTS_RED_COLOR="[31m"

MATTS_VC_PROMPT=$' \033[37m%n\033[00m:\033[36m%[unknown]b\033[32m'
MATTS_VC_PROMPT_EX="$MATTS_VC_PROMPT%m%u"

matts_vcprompt() {
  vcprompt -f "$MATTS_VC_PROMPT"
}

matts_lastcommandfailed() {
  code=$?
  if [ $code != 0 ]; then
    echo -n $'\033[37m exited \033[31m'
    echo -n $code
    echo -n $'\033[37m'
  fi
}

matts_virtualenv() {
  if [ x$VIRTUAL_ENV != x ]; then
    if [[ $VIRTUAL_ENV == *.virtualenvs/* ]]; then
      ENV_NAME=`basename "${VIRTUAL_ENV}"`
    else
      folder=`dirname "${VIRTUAL_ENV}"`
      ENV_NAME=`basename "$folder"`
    fi
    echo -n $' \033[37mworkon:\033[34m'
    echo -n $ENV_NAME
    echo -n $'\033[00m'
  fi
}

use_env() {
  typeset venv
  venv="$1"
  if [[ "${VIRTUAL_ENV:t}" != "$venv" ]]; then
    if workon | grep -q "$venv"; then
      workon "$venv"
    else
      echo -n "Create virtualenv $venv now? (y/n) "
      read answer
      if [[ "$answer" == "y" ]]; then
        mkvirtualenv "$venv"
        if [ -f "requirements.txt" ] ; then
          echo -n "Install dependencies from requirements.txt? (y/n) "
          read answer
          if [[ "$answer" == "y" ]] ; then
            pip install -r requirements.txt
          fi
        fi
      fi
    fi
  fi
}

export MATTS_BASEPROMPT='\n\e${MATTS_PINK_COLOR}\u \
\e${MATTS_GRAY_COLOR}@ \e${MATTS_ORANGE_COLOR}\h \
\e${MATTS_GRAY_COLOR}in \e${MATTS_GREEN_COLOR}\w\
`matts_lastcommandfailed`\
\e${MATTS_GRAY_COLOR}`matts_vcprompt`\
`matts_virtualenv`\
\e${MATTS_DEFAULT_COLOR}'

export PS1="\[\033[G\]${MATTS_BASEPROMPT}
$ "

export TERM=xterm-color
export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
export CLICOLOR=1
if [ `uname` == "Darwin" ]; then
  export LSCOLORS=GxFxCxDxBxegedabagaced
  export LC_CTYPE=en_US.utf-8
  export LC_ALL=en_US.utf-8
else
  echo "WORD"
  alias ls='ls --color=auto'
fi

export PATH=/usr/local/bin:~/.bin:$PATH:~/.gem/ruby/1.8/bin
export IGNOREEOF=1
export PYTHONDONTWRITEBYTECODE=1
export LESS=FRSX

# virtualenvwrapper and pip
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
export VIRTUALENV_DISTRIBUTE=1
export VIRTUAL_ENV_DISABLE_PROMPT=1

if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
  export WORKON_HOME=$HOME/.virtualenvs
  source /usr/local/bin/virtualenvwrapper.sh
fi

alias ..='cd ..'
shopt -s histappend

if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi



# don't let virtualenv show prompts by itself

alias rmpyc="find . -name "*.pyc" -exec rm -rf {} \;"
alias diff='twdiff'

# export EDITOR="subl"

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
PATH=$PATH:/opt/mongodb/bin # Add MongoDB to PATH
